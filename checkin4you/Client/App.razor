@using checkin4you.Client.Services.States
@inject ILogger<App> _logger
@inject HttpClient _httpClient
@inject ReservationStateService ReservationStateService
@inject LanguageStateService LanguageStateService

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var checkedInReservationIds = await _httpClient.GetFromJsonAsync<List<string>>("api/reservations/GetCheckedInReservationIds");
            _logger.LogInformation("[App] Successfully retrieved CheckedInReservationIds.", checkedInReservationIds);

            ReservationStateService.SetCheckedInReservationIds(checkedInReservationIds);
        }
        catch (Exception ex)
        {
            _logger.LogError("[App] Error while retrieving CheckedInReservationIds.", ex.Message);
        }
    }
}
